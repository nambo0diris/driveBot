import {Markup, Telegraf, Scenes, session} from "telegraf";
import db_connect from "./libs/db_connect.js";
import dotenv from "dotenv"
import {startText} from "./content.js";
import commands from "./menu/commands.js";
import * as fs from "fs";
import * as path from "path";
import make_passport_scene from "./scenes/make_passport_scene.js";
import make_drive_license_scene from "./scenes/make_driver_license_scene.js";
import withdraw_money_scene from "./scenes/withdraw_money_scene";
dotenv.config();
// @ts-ignore
const bot = new Telegraf(process.env.BOT_TOKEN);
// @ts-ignore
const stage = new Scenes.Stage([make_passport_scene, make_drive_license_scene, withdraw_money_scene]);
bot.use(session());
// @ts-ignore
bot.use(stage.middleware());



// bot.action('withdraw', async ctx => {
//     try {
//         // @ts-ignore
//         return ctx.scene.enter(withdraw_money_scene);
//     } catch (e) {
//         console.log(e)
//     }
// });

bot.action('go_to_fake_market', async ctx => {
    ctx.answerCbQuery();
    try {
        await ctx.replyWithHTML("–ö–∞–∫—É—é –±—É—Ç–∞—Ñ–æ—Ä–∏—é/—Å—É–≤–µ–Ω–∏—Ä –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
            Markup.inlineKeyboard([
                [Markup.button.callback("üöò –ë—É—Ç–∞—Ñ–æ—Ä—Å–∫–∏–µ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è","drive_license" )],
                [Markup.button.callback("üëì –ë—É—Ç–∞—Ñ–æ—Ä—Å–∫–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)", "passports")],
            ]));

    } catch (e) {
        console.log(e)
    }
})
bot.action('tutorial', async ctx => {
    try {
        // @ts-ignore
        await ctx.replyWithHTML(`–ß—Ç–æ–±—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ —Å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —Å—Ç–æ—Ä–æ–Ω 3—Ö4, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–æ—Å—Ç–µ–π—à–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º, —Å–∫–∞—á–∞—Ç—å –µ–≥–æ –Ω–∞ –∞–Ω–¥—Ä–æ–∏–¥ –º–æ–∂–Ω–æ –ø–æ üëâ <a href='https://play.google.com/store/apps/details?id=com.arumcomm.cropimage'>—ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</a>üëà
–¥–ª—è –∞–π—Ñ–æ–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å 
–ø–æ üëâ <a href='https://apps.apple.com/ru/app/%D0%BE%D0%B1%D1%80%D0%B5%D0%B7%D0%BA%D0%B0-%D1%84%D0%BE%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%B9/id442008567'>—ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</a>üëà`)
        await ctx.replyWithDocument({
            source: "/root/driveBot/examples/example.mp4",
        },Markup.inlineKeyboard([
            [Markup.button.callback("üê£ –í –Ω–∞—á–∞–ª–æ","start" )],
        ]))
    } catch (e) {
        console.log(e)
    }
})
bot.action('start', async ctx => {
    try {
        await ctx.replyWithHTML(startText, Markup.inlineKeyboard(
            [
                [Markup.button.callback("‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –±—É—Ç–∞—Ñ–æ—Ä–∏–∏", "go_to_fake_market")],
                [Markup.button.callback("üé• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", "tutorial")],
            ]
        ));
    } catch (e) {
        console.log(e)
    }
})
bot.on("callback_query", async ctx => {
    try {
        // Armenia, Argentina, Austria, Australia, Azerbaijan, Bulgaria, Brazil, Canada, Cyprus, Germany, Dominican Republic, Estonia, Egypt, Spain, Finland, Georgia, Italy, Tajikistan
        await ctx.answerCbQuery();
        // @ts-ignore
        if (ctx.callbackQuery["data"] === "passport") {
            // @ts-ignore
            await ctx.scene.enter("make_passport_scene");
        }
        // @ts-ignore
        if (ctx.callbackQuery["data"] === "drive_license") {
            // @ts-ignore
            await ctx.scene.enter("make_driver_license_scene");
        }
    } catch (e) {
        console.log(e)
    }
})

bot.start(async (ctx) => {
    try {
        await fs.stat(`/root/driveBot/temp/users/${ctx.message.chat.id}`, async (err) => {
            if (!err) {
                fs.readdir(`/root/driveBot/temp/users/${ctx.message.chat.id}/`, (err, files) => {
                    if (err) throw err;
                    for (const file of files) {
                        fs.unlink(path.join(`/root/driveBot/temp/users/${ctx.message.chat.id}/`, file), err => {
                            if (err) throw err;
                        });
                    }
                });
            } else if (err.code === 'ENOENT') {

            }
        });

        // @ts-ignore
        let newDBconnect = new db_connect();
        await newDBconnect.getUserInfo(ctx.update.message.chat.id, async (result: any) => {
            if (typeof result === "undefined") {
                // @ts-ignore
                await newDBconnect.addNewUser({user_id: ctx.update.message.chat.id, ref_id: ctx.startPayload});
            }
            if(ctx.startPayload !== ""){
                // @ts-ignore
                await newDBconnect.getUserInfo(ctx.startPayload, async (res:any) => {
                    console.log(res)
                    const redirect_count = res.redirect_count + 1;
                    await newDBconnect.updateUserInfo({user_id: ctx.startPayload, key:"redirect_count", value: redirect_count})
                })
            }

        });

        await newDBconnect.count(ctx.update.message.chat.id, async (result:any) => {
            let count = Number(result["COUNT(*)"]) + 134;
            await newDBconnect.getUserInfo(ctx.update.message.chat.id, async (res:any) => {
                await ctx.replyWithHTML(`–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ <b>30%</b> —Å –∫–∞–∂–¥–æ–π –æ–ø–ª–∞—Ç—ã –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.
–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/dev_test_drive_bot?start=${ctx.update.message.chat.id}

–ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –±—ã–ª–æ: <b>${res.redirect_count}</b>.
–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Å–¥–µ–ª–∞–ª–∏ —Å–¥–µ–ª–æ–∫: <b>${res.orders_count}</b>.
–í–∞—à –±–∞–ª–∞–Ω—Å: <b>${res.score}</b> —Ä—É–±–ª–µ–π.
–í—ã–ø–ª–∞—á–µ–Ω–æ: <b>${res.widthdraw}</b> —Ä—É–±–ª–µ–π.
–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>${res.widthdraw + res.score}</b> —Ä—É–±–ª–µ–π.

–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤—ã–ø–ª–∞—Ç—É, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /withdraw "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫ –±–∞–Ω–∫—É –∏–ª–∏ –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã)
<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b>
/withdwraw +79991111111
/withdwraw 1111 2222 1111 2222
/withdwraw 1111222211112222
`);

                await ctx.replyWithHTML(`‚ö°‚ö° –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π, —É–∂–µ –ø–æ–ª—É—á–∏–≤—à–∏—Ö –∫–æ–ø–∏–∏: <b>${count}</b>‚ö°‚ö°`);
                await ctx.replyWithHTML(startText, Markup.inlineKeyboard(
                    [
                        [Markup.button.callback("‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –±—É—Ç–∞—Ñ–æ—Ä–∏–∏", "go_to_fake_market")],
                        [Markup.button.callback("üé• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", "tutorial")],
                    ]
                ));
            })
        })
    } catch (e) {
        console.log(e)
    }
})
bot.command("/support", async (ctx) => {
    try {
        await ctx.replyWithHTML("–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –∏–ª–∏ —É –≤–∞—Å –ø—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞, –Ω–æ —Ñ–∞–π–ª—ã –Ω–µ –ø—Ä–∏—à–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç, –ø–∏—à–∏—Ç–µ @xeroxDoc_bot_support.\n" +
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –∂–º–∏—Ç–µ /start.");
    } catch (e) {
        console.log(e)
    }
})
bot.command("/withdraw", async (ctx) => {
    try {
        await ctx.replyWithHTML(`–û–∂–∏–¥–∞–π—Ç–µ –≤—ã–ø–ª–∞—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤, –µ—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É üëâ /support`);

    } catch (e) {
        console.log(e)
    }
})
bot.help(async ctx => {
    await ctx.reply(commands);
})
await bot.launch();